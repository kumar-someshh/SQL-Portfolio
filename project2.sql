Sales Performance Analysis for an E-commerce Store
Objective:
Analyze sales data from an e-commerce platform to provide insights into customer behavior, sales trends, product performance, and recommendations for business growth.

1. Dataset:
Orders: Order ID, Customer ID, Date, Payment Method, Total Amount, Discount Applied, Shipping Cost.

Customers: Customer ID, Name, Age, Gender, Location, Email, Signup Date.

Products: Product ID, Product Name, Category, Price, Stock, Date Added.

Order Details: Order ID, Product ID, Quantity, Unit Price, Total Price.

Shippers: Shipper ID, Shipper Name, Shipping Cost, Delivery Time.

2. Database Design:

Customer Table:
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100),
    Age INT,
    Gender CHAR(1),
    Location VARCHAR(100),
    SignupDate DATE
);


Products Table:
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Category VARCHAR(50),
    Price DECIMAL(10, 2),
    Stock INT,
    DateAdded DATE
);

Orders Table:
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    PaymentMethod VARCHAR(50),
    TotalAmount DECIMAL(10, 2),
    DiscountApplied DECIMAL(10, 2),
    ShippingCost DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

OrderDetails Table:
CREATE TABLE OrderDetails (
    OrderID INT,
    ProductID INT,
    Quantity INT,
    UnitPrice DECIMAL(10, 2),
    TotalPrice DECIMAL(10, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

Shippers Table:

CREATE TABLE Shippers (
    ShipperID INT PRIMARY KEY,
    ShipperName VARCHAR(100),
    ShippingCost DECIMAL(10, 2),
    DeliveryTime INT
);






3. Analysis Goals:

Sales Trends:

- How have sales changed over time (daily, weekly, monthly)?
SELECT 
    OrderDate, 
    SUM(TotalAmount) AS DailySales
FROM Orders
GROUP BY OrderDate
ORDER BY OrderDate;
-----------------------------------------------------------------
SELECT 
    EXTRACT(MONTH FROM OrderDate) AS Month, 
    SUM(TotalAmount) AS MonthlySales
FROM Orders
GROUP BY EXTRACT(MONTH FROM OrderDate)
ORDER BY Month;
----------------------------------------------------------------
SELECT 
    EXTRACT(WEEK FROM OrderDate) AS Week, 
    SUM(TotalAmount) AS WeeklySales
FROM Orders
GROUP BY EXTRACT(WEEK FROM OrderDate)
ORDER BY Week;



- Which days or times see the highest sales?
SELECT 
    DAYNAME(OrderDate) AS Day, 
    SUM(TotalAmount) AS TotalSales
FROM Orders
GROUP BY Day
ORDER BY TotalSales DESC;
---------------------------------------------------------------
SELECT 
    EXTRACT(HOUR FROM OrderTime) AS Hour, 
    SUM(TotalAmount) AS SalesAmount
FROM Orders
GROUP BY Hour
ORDER BY SalesAmount DESC;




Customer Behavior:

- What is the average order value per customer?
SELECT 
    CustomerID, 
    AVG(TotalAmount) AS AvgOrderValue
FROM Orders
GROUP BY CustomerID
ORDER BY AvgOrderValue DESC;



- Which customer demographics (age, location) have the highest spending?
SELECT 
    C.Age, 
    SUM(O.TotalAmount) AS TotalSpending
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.Age
ORDER BY TotalSpending DESC;
---------------------------------------------------------------
SELECT 
    C.Location, 
    SUM(O.TotalAmount) AS TotalSpending
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.Location
ORDER BY TotalSpending DESC;


- Who are the top 10 customers by revenue?
SELECT 
    C.CustomerID, 
    C.Name, 
    SUM(O.TotalAmount) AS TotalRevenue
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID, C.Name
ORDER BY TotalRevenue DESC
LIMIT 10;




Product Performance:

- Which products are bestsellers and which have poor sales?
SELECT 
    P.ProductName, 
    SUM(OD.Quantity) AS TotalSold
FROM OrderDetails OD
JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY P.ProductName
ORDER BY TotalSold DESC
LIMIT 5;
--------------------------------------------------------------
SELECT 
    P.ProductName, 
    SUM(OD.Quantity) AS TotalSold
FROM OrderDetails OD
JOIN Products P ON OD.ProductID = P.ProductID
GROUP BY P.ProductName
HAVING SUM(OD.Quantity) < 10
ORDER BY TotalSold ASC;



-What is the overall stock level by product category?
SELECT 
    P.Category, 
    SUM(P.Stock) AS TotalStock
FROM Products P
GROUP BY P.Category;



Order Insights:

- How much revenue is generated by discounts?
SELECT 
    SUM(DiscountApplied) AS TotalDiscountRevenue
FROM Orders;


- What are the most popular payment methods?
SELECT 
    PaymentMethod, 
    COUNT(OrderID) AS NumOrders
FROM Orders
GROUP BY PaymentMethod
ORDER BY NumOrders DESC;


Shipping Performance:

- Which shipping company delivers the fastest?
SELECT 
    S.ShipperName, 
    AVG(S.DeliveryTime) AS AvgDeliveryTime
FROM Orders O
JOIN Shippers S ON O.ShipperID = S.ShipperID
GROUP BY S.ShipperName
ORDER BY AvgDeliveryTime;



- Which shipping method has the highest associated costs?
SELECT 
    S.ShipperName, 
    AVG(S.ShippingCost) AS AvgShippingCost
FROM Orders O
JOIN Shippers S ON O.ShipperID = S.ShipperID
GROUP BY S.ShipperName
ORDER BY AvgShippingCost DESC;
